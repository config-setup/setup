#!/usr/bin/env bash

# Detect OS
OS=$(uname -s | tr '[:upper:]' '[:lower:]')

# Detect Architecture
ARCH=$(uname -m)
case "$ARCH" in
x86_64) ARCH="amd64" ;;
armv7l) ARCH="arm" ;;
aarch64 | arm64) ARCH="arm64" ;;
i386) ARCH="386" ;;
*)
  echo "Unsupported architecture: $ARCH"
  exit 1
  ;;
esac

download::file() {
  local args=""
  local url
  local dir
  local file

  if [[ $1 == -* ]]; then
    local args=$1
    local url=$2
    local dir=$3
  else
    local url=$1
    local dir=$2
  fi

  file="$dir/$(basename $url)"

  echo curl "$args" "$url" --create-dirs -o "$file"
  curl "$args" "$url" --create-dirs -o "$file"

  if [[ $file == *.zip ]]; then
    unzip -o "$file" -d "$(dirname $file)"
    rm "$file"
  fi
}

git::clone() {
  local repo_url=$1
  local repo_dir=$2

  # Local DIR exists
  if [ -d "$repo_dir" ]; then
    pushd "$repo_dir" &>/dev/null || exit

    # Update url if it is wrong
    if [[ $(git remote get-url origin) == "$repo_url" ]]; then
      git remote set-url origin "$repo_url"
    fi

    # Pull updates
    echo "$repo_url $(git pull)"

    popd &>/dev/null || exit

  # Clone Repo
  else
    echo "$repo_url $(git clone "$repo_url" "$repo_dir")"
  fi
}

setup() {
  # ohmyzsh
  if [ -z "${ZSH}" ]; then
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  fi

  # config files
  download::file -fsSL https://raw.githubusercontent.com/config-setup/setup/refs/heads/main/.zshrc ~/.zshrc

  # config flies in git
  git::clone git@github.com/config-setup/local-bin.git ~/.local/bin/
  git::clone git@github.com/config-setup/tmux.git ~/.config/tmux
  git::clone git@github.com/config-setup/nvim.git ~/.config/nvim
  git::clone git@github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

  # font install
  download::file -fsSL https://github.com/ryanoasis/nerd-fonts/releases/download/v3.4.0/Hasklig.zip ~/.local/share/fonts/Hasklig.zip

  # font cache reset
  fc-cache -fv

  # mise install
  curl https://mise.run | sh

  # tools
  ~/.local/bin/mise use jq
  ~/.local/bin/mise use neovim@stable
  ~/.local/bin/mise use lazydocker
  ~/.local/bin/mise use lazygit
  ~/.local/bin/mise use terraform
  ~/.local/bin/mise use terragrunt
  ~/.local/bin/mise use kubectl
  ~/.local/bin/mise use redis

  # languages
  ~/.local/bin/mise use python@3.12.7
  ~/.local/bin/mise use nodejs
  ~/.local/bin/mise use golang
  ~/.local/bin/mise use rust

  # Python Packages
  python3 -m pip install -U pip ruff
}

setup::docker() {
  curl -fsSL https://get.docker.com | bash
}

case $1 in
docker) setup::docker ;;
*) setup ;;
esac
